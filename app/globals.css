body {
  font-family: "Inter", sans-serif;
}

@import "tailwindcss";

:root {
  font-family: var(--font-geist-sans), system-ui, sans-serif;
  --background: #ffffff;
  --foreground: #171717;
  --rulerBgColor: #0c0cf6;
}

@theme inline {
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-primary: #e4e4e4;
  --color-hover: #76767614;
  --color-muted: #767676;
  --color-blue-primary: #2167c6;
  --color-green-primary: #248567;
}

.code {
  font-family:
    var(--font-geist-mono), ui-monospace, SFMono-Regular, Menlo, monospace;
}

.bg-dots {
  position: relative;
  z-index: auto;
  display: flex;
  flex-direction: column;
  height: 100%;
  min-width: 100%;
  background-color: #efedec;
  background-image: radial-gradient(rgba(33, 103, 198, 0.2) 8%, #efedec 5%);
  background-size: 16px 16px;
}

/* -----< PDF PRINT >----- */

@media print {
  @page {
    size: A4;
    margin: 16mm;
  }
  html,
  body {
    margin: 0;
    padding: 0;
    background: white;
  }
}
/* ---------- */

/* Helpers for pagination and layout control in PDFs */
.page-break {
  break-before: page;
}
.avoid-break {
  break-inside: avoid;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

button {
  cursor: pointer;
}

/* DOCUMENT */

.col .docBlock:not(:last-child) {
  margin-bottom: 26px;
}

/* Using attribute data-drag-kind to allow overlay (fields) surface drop */
[data-drag-kind="field"] .overlay-surface {
  pointer-events: auto !important;
}

/*
  The border is applied to the dropped elements, but only when a drag operation is active.
*/
.dropzone-active {
  border: 1px solid transparent;
  opacity: 0;
}

[data-drag-kind="field"] .dropzone-active,
[data-drag-kind="content"] .dropzone-active,
[data-drag-kind="block"] .dropzone-active {
  border-color: #e5e5e5;
  opacity: 1;
}

/* Headings */
.re-h1 {
  font-weight: 800;
  letter-spacing: -0.01em;
  font-size: 2rem;
  line-height: 2.5rem;
  margin: 0.75rem 0 0.5rem;
}
.re-h2 {
  font-weight: 700;
  letter-spacing: -0.005em;
  font-size: 1.5rem;
  line-height: 2rem;
  margin: 0.6rem 0 0.4rem;
}
.re-h3 {
  font-weight: 700;
  font-size: 1.25rem;
  line-height: 1.75rem;
  margin: 0.5rem 0 0.35rem;
}
.re-quote {
  border-left: 3px solid #e5e7eb;
  padding-left: 0.75rem;
  color: #6b7280;
}

/* Alignment */
.re-align-left {
  text-align: left;
}
.re-align-center {
  text-align: center;
}
.re-align-right {
  text-align: right;
}
.re-align-justify {
  text-align: justify;
}

.re-editor-wrapper .re-align-left > div,
.re-editor-wrapper .re-align-center > div,
.re-editor-wrapper .re-align-right > div,
.re-editor-wrapper .re-align-justify > div {
  display: inline;
}

/* TIPTAP */
.tiptap {
  /* optional base styles */
  line-height: 1.6;
}

/* Global CSS (e.g., globals.css) */
.tiptap ul {
  list-style: disc;
  padding-left: 1.5rem; /* indent bullets */
  margin: 0.5rem 0;
}

.tiptap ol {
  list-style: decimal;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.tiptap li {
  margin: 0.25rem 0;
}

/* nicer nested levels */
.tiptap ul ul {
  list-style: circle;
}
.tiptap ul ul ul {
  list-style: square;
}
.tiptap ol ol {
  list-style: lower-alpha;
}
.tiptap ol ol ol {
  list-style: lower-roman;
}

/* HEADING */
.tiptap h1 {
  font-size: 2rem;
  font-weight: bold;
}
.tiptap h2 {
  font-size: 1.75rem;
  font-weight: bold;
}
.tiptap h3 {
  font-size: 1.5rem;
  font-weight: bold;
}
.tiptap h4 {
  font-size: 1.25rem;
  font-weight: 600;
}
.tiptap h5 {
  font-size: 1.1rem;
  font-weight: 600;
  margin: 0.6rem 0;
}

/* LINK */

.tiptap a {
  color: #0d6294;
  text-decoration: none;
  font-weight: 500;
  border-bottom: 1px solid rgba(13, 148, 136, 0.4);
  transition:
    color 0.2s ease,
    border-color 0.2s ease;
  cursor: pointer;
}

.tiptap a:hover {
  color: #0f4476;
  border-color: currentColor;
}

/* remove any focus outline added by ProseMirror or resets */
.tiptap .ProseMirror:focus {
  outline: none;
}
.tiptap .ProseMirror:focus-visible {
  outline: none;
}
.tiptap .ProseMirror-focused {
  outline: none;
}

/* if your design system adds a ring/box-shadow on focus */
.tiptap .ProseMirror:focus,
.tiptap .ProseMirror:focus-visible,
.tiptap .ProseMirror-focused {
  box-shadow: none !important;
}

/* if the wrapper gets outlined via :focus-within */
.tiptap:focus-within {
  outline: none;
  box-shadow: none;
}
